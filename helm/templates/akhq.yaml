kind: Deployment
apiVersion: apps/v1
metadata:
  name: akhq
  namespace: kafka
  labels:
    app.kubernetes.io/instance: akhq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akhq
    helm.sh/chart: akhq-0.2.1
  annotations:
    deployment.kubernetes.io/revision: '1'
    meta.helm.sh/release-name: akhq
    meta.helm.sh/release-namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: akhq
      app.kubernetes.io/name: akhq
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: akhq
        app.kubernetes.io/name: akhq
    spec:
      volumes:
        - name: config
          configMap:
            name: akhq
            defaultMode: 420
        - name: secrets
          secret:
            secretName: akhq-secrets
            defaultMode: 420
      containers:
        - name: akhq
          image: 'tchiotludo/akhq:latest'
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: management
              containerPort: 8081
              protocol: TCP
          env:
            - name: MICRONAUT_ENVIRONMENTS
              value: secrets
            - name: MICRONAUT_CONFIG_FILES
              value: '/app/application.yml,/app/application-secrets.yml'
          volumeMounts:
            - name: config
              mountPath: /app/application.yml
              subPath: application.yml
            - name: secrets
              mountPath: /app/application-secrets.yml
              subPath: application-secrets.yml
          livenessProbe:
            tcpSocket:
              port: management
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: management
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          imagePullPolicy: Always
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: akhq
  namespace: kafka
  labels:
    app.kubernetes.io/instance: akhq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akhq
    helm.sh/chart: akhq-0.2.1
  annotations:
    meta.helm.sh/release-name: akhq
    meta.helm.sh/release-namespace: kafka
data:
  application.yml: |
    akhq:
      server:
        access-log: 
          enabled: false 
          name: org.akhq.log.access
---
kind: Secret
apiVersion: v1
metadata:
  name: akhq-secrets
  namespace: kafka
  labels:
    app.kubernetes.io/instance: akhq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akhq
    helm.sh/chart: akhq-0.2.1
data:
  application-secrets.yml: >-
    YWtocToKICBjb25uZWN0aW9uczoKICAgIG15LWNsdXN0ZXItcGxhaW4tdGV4dDoKICAgICAgcHJvcGVydGllczoKICAgICAgICBib290c3RyYXAuc2VydmVyczogImthZmthLWJyb2tlcjo5MDkyIgogICAgICBzY2hlbWEtcmVnaXN0cnk6CiAgICAgICAgdXJsOiAiaHR0cDovL3NjaGVtYS1yZWdpc3RyeTo4MDg1IgogICAgICAgIHR5cGU6ICJjb25mbHVlbnQiCiAgICAgICAgYmFzaWMtYXV0aC11c2VybmFtZTogYmFzaWMtYXV0aC11c2VyCiAgICAgICAgYmFzaWMtYXV0aC1wYXNzd29yZDogYmFzaWMtYXV0aC1wYXNzCiAgICAgIGNvbm5lY3Q6CiAgICAgICAgLSBuYW1lOiAibXktY29ubmVjdCIKICAgICAgICAgIHVybDogImh0dHA6Ly9jb25uZWN0OjgwODMiCiAgICAgICAgICBiYXNpYy1hdXRoLXVzZXJuYW1lOiBiYXNpYy1hdXRoLXVzZXIKICAgICAgICAgIGJhc2ljLWF1dGgtcGFzc3dvcmQ6IGJhc2ljLWF1dGgtcGFzcwo=
type: Opaque
---
kind: Service
apiVersion: v1
metadata:
  name: akhq
  namespace: kafka
  labels:
    app.kubernetes.io/instance: akhq
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: akhq
    helm.sh/chart: akhq-0.2.1
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
  selector:
    app.kubernetes.io/instance: akhq
    app.kubernetes.io/name: akhq
  type: NodePort

